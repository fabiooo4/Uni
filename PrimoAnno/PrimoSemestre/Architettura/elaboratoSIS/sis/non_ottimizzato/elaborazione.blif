.model elaborazione
.inputs manche1 manche0 primo1 primo0 secondo1 secondo0 inizia
.outputs partita1 partita0

# Costanti
.names ZERO

.subckt COSTANTE00000 O4=1CO4 O3=1CO3 O2=1CO2 O1=1CO1 O0=1CO0
.subckt COSTANTE0000 O3=2CO3 O2=2CO2 O1=2CO1 O0=2CO0
.subckt COSTANTE00001 O4=3CO4 O3=3CO3 O2=3CO2 O1=3CO1 O0=3CO0
.subckt COSTANTE0001 O3=4CO3 O2=4CO2 O1=4CO1 O0=4CO0
.subckt COSTANTE1111 O3=5CO3 O2=5CO2 O1=5CO1 O0=5CO0 # -1
.subckt COSTANTE00100 O4=6CO4 O3=6CO3 O2=6CO2 O1=6CO1 O0=6CO0

# Componenti
# sommatore 5 
.subckt sommatore5bit A4=ZERO A3=primo1 A2=primo0 A1=secondo1 A0=secondo0 B4=6CO4 B3=6CO3 B2=6CO2 B1=6CO1 B0=6CO0 CIN=ZERO O4=1S4 O3=1S3 O2=1S2 O1=1S1 O0=1S0 COUT=1COUT
# mux settato a 4 + primosecondo quando inizia vale 1, valore precedente di maxManche altrimenti
.subckt mux2in5bit X0=inizia A4=mm4 A3=mm3 A2=mm2 A1=mm1 A0=mm0 B4=1S4 B3=1S3 B2=1S2 B1=1S1 B0=1S0 O4=muxmm4 O3=muxmm3 O2=muxmm2 O1=muxmm1 O0=muxmm0
# registro maxManche (mm)
.subckt registro5bit A4=muxmm4 A3=muxmm3 A2=muxmm2 A1=muxmm1 A0=muxmm0 O4=mm4 O3=mm3 O2=mm2 O1=mm1 O0=mm0 

# mux che mette in output 00001 se la manche è valida, 00000 altrimenti
.subckt mux4in5bit X1=manche1 X0=manche0 A4=1CO4 A3=1CO3 A2=1CO2 A1=1CO1 A0=1CO0 B4=3CO4 B3=3CO3 B2=3CO2 B1=3CO1 B0=3CO0 C4=3CO4 C3=3CO3 C2=3CO2 C1=3CO1 C0=3CO0 D4=3CO4 D3=3CO3 D2=3CO2 D1=3CO1 D0=3CO0 O4=1muxm4 O3=1muxm3 O2=1muxm2 O1=1muxm1 O0=1muxm0
# sommatore che somma 1 a mancheIdx se la manche è valida
.subckt sommatore5bit A4=1muxm4 A3=1muxm3 A2=1muxm2 A1=1muxm1 A0=1muxm0 B4=mi4 B3=mi3 B2=mi2 B1=mi1 B0=mi0 CIN=ZERO O4=2S4 O3=2S3 O2=2S2 O1=2S1 O0=2S0 COUT=2COUT
# mux settato a 1 quando inizia vale 1, valore precedente di mancheIdx altrimenti
.subckt mux2in5bit X0=inizia A4=2S4 A3=2S3 A2=2S2 A1=2S1 A0=2S0 B4=1CO4 B3=1CO3 B2=1CO2 B1=1CO1 B0=1CO0 O4=muxmi4 O3=muxmi3 O2=muxmi2 O1=muxmi1 O0=muxmi0
# registro mancheIdx (mi)
.subckt registro5bit A4=muxmi4 A3=muxmi3 A2=muxmi2 A1=muxmi1 A0=muxmi0 O4=mi4 O3=mi3 O2=mi2 O1=mi1 O0=mi0

# mux che mette in output 0001 se ha vinto il primo giocatore, 1111 se ha vinto il secondo giocatore, 0000 negli altri casi
.subckt mux4in4bit X1=manche1 X0=manche0 A3=2CO3 A2=2CO2 A1=2CO1 A0=2CO0 B3=4CO3 B2=4CO2 B1=4CO1 B0=4CO0 C3=5CO3 C2=5CO2 C1=5CO1 C0=5CO0 D3=2CO3 D2=2CO2 D1=2CO1 D0=2CO0 O3=2muxm3 O2=2muxm2 O1=2muxm1 O0=2muxm0
# sommatore che incrementa vantaggio di 1 se vince il primo giocatore, decrementa di 1 se vince il secondo, non incrementa negli altri casi
.subckt sommatore4bit A3=v3 A2=v2 A1=v1 A0=v0 B3=2muxm3 B2=2muxm2 B1=2muxm1 B0=2muxm0 CIN=ZERO O3=3S3 O2=3S2 O1=3S1 O0=3S0 COUT=3COUT
# mux settato a 0 quando inizia vale 1, valore precedente di vantaggio altrimenti
.subckt mux2in4bit X0=inizia A3=3S3 A2=3S2 A1=3S1 A0=3S0 B3=2CO3 B2=2CO2 B1=2CO1 B0=2CO0 O3=muxv3 O2=muxv2 O1=muxv1 O0=muxv0
# registro vantaggio (v)
.subckt registro4bit A3=muxv3 A2=muxv2 A1=muxv1 A0=muxv0 O3=v3 O2=v2 O1=v1 O0=v0

# componente che calcola il risultato della partita
.subckt partita v3=muxv3 v2=muxv2 v1=muxv1 v0=muxv0 mi4=muxmi4 mi3=muxmi3 mi2=muxmi2 mi1=muxmi1 mi0=muxmi0 mm4=mm4 mm3=mm3 mm2=mm2 mm1=mm1 mm0=mm0 inizia=inizia partita1=partita1 partita0=partita0

.model COSTANTE00000
.outputs O4 O3 O2 O1 O0
.names O4
.names O3
.names O2
.names O1
.names O0
.end

.model COSTANTE00001
.outputs O4 O3 O2 O1 O0
.names O4
.names O3
.names O2
.names O1
.names O0
1
.end

.model COSTANTE0001
.outputs O3 O2 O1 O0
.names O3
.names O2
.names O1
.names O0
1
.end

.model COSTANTE1111
.outputs O3 O2 O1 O0
.names O3
1
.names O2
1
.names O1
1
.names O0
1
.end

# Componenti
.search mux4in5bit.blif
.search mux4in4bit.blif
.search mux2in5bit.blif
.search mux2in4bit.blif
.search sommatore5bit.blif
.search sommatore4bit.blif
.search registro5bit.blif
.search registro4bit.blif
.search partita.blif
